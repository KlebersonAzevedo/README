#Questão16


#include <stdio.h>
#include <stdlib.h>

// Função de comparação para ordenar os floats em ordem crescente
int comparar(const void *a, const void *b) {
    const float *float_a = (const float *)a; // Convertendo ponteiro genérico para ponteiro para float
    const float *float_b = (const float *)b; // Convertendo ponteiro genérico para ponteiro para float
    if (*float_a < *float_b) {
        return -1; // Se float_a for menor que float_b, retorna -1
    } else if (*float_a > *float_b) {
        return 1; // Se float_a for maior que float_b, retorna 1
    } else {
        return 0; // Se float_a for igual a float_b, retorna 0
    }
}

int main() {
    int n;
    printf("Digite a quantidade de valores que deseja inserir: ");
    scanf("%d", &n);

    float *valores = (float *)malloc(n * sizeof(float)); // Aloca memória para armazenar os valores
    if (valores == NULL) {
        printf("Erro de alocação de memória.\n");
        return 1; // Retorna 1 para indicar falha
    }

    printf("Digite %d valores float:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%f", &valores[i]); // Lê os valores fornecidos pelo usuário
    }

    qsort(valores, n, sizeof(float), comparar); // Ordena os valores usando a função qsort

    printf("Valores em ordem crescente:\n");
    for (int i = 0; i < n; i++) {
        printf("%.2f ", valores[i]); // Imprime os valores ordenados
    }
    printf("\n");

    free(valores); // Libera a memória alocada

    return 0; // Retorna 0 para indicar sucesso
}
